
:py:mod:`ltbio.clinical.Semiology`
==================================

.. py:module:: ltbio.clinical.Semiology


Overview
---------------






Classes
~~~~~~~
.. list-table::
   :header-rows: 0
   :widths: auto
   :class: summarytable

   * - :py:obj:`Semiology <ltbio.clinical.Semiology.Semiology>`
     - str(object='') -> str









Contents
---------------

.. py:class:: Semiology

   Bases: :py:obj:`str`, :py:obj:`enum.Enum`

   .. autoapi-inheritance-diagram:: ltbio.clinical.Semiology.Semiology
      :parts: 1

   str(object='') -> str
   str(bytes_or_buffer[, encoding[, errors]]) -> str

   Create a new string object from the given object. If encoding or
   errors is specified, then the object must expose a data buffer
   that will be decoded using the given encoding and error handler.
   Otherwise, returns the result of object.__str__() (if defined)
   or repr(object).
   encoding defaults to sys.getdefaultencoding().
   errors defaults to 'strict'.

   .. py:attribute:: MOTOR
      :value: 'Non-specific Motor'

      

   .. py:attribute:: NONMOTOR
      :value: 'Non-specific Non-motor'

      

   .. py:attribute:: TONIC
      :value: 'Tonic'

      

   .. py:attribute:: ATONIC
      :value: 'Atonic'

      

   .. py:attribute:: CLONIC
      :value: 'Clonic'

      

   .. py:attribute:: TC
      :value: 'Tonic-Clonic'

      

   .. py:attribute:: MYOCLONIC
      :value: 'Myoclonic'

      

   .. py:attribute:: ESPASMS
      :value: 'Epileptic Spasms'

      

   .. py:attribute:: HK
      :value: 'Hyperkinetic'

      

   .. py:attribute:: AUTOMATISMS
      :value: 'Automatisms'

      

   .. py:attribute:: AUTONOMIC
      :value: 'Autonomic'

      

   .. py:attribute:: BARREST
      :value: 'Behaviour arrest'

      

   .. py:attribute:: COGNITIVE
      :value: 'Cognitive'

      

   .. py:attribute:: EMOTIONAL
      :value: 'Emotional'

      

   .. py:attribute:: SENSORY
      :value: 'Sensory'

      

   .. py:attribute:: ABSENCE
      :value: 'Absence'

      

   .. py:attribute:: AURA
      :value: 'Pre-ical Aura'

      

   .. py:attribute:: SUBCLINICAL
      :value: 'Sub-clinical / Infra-clinical'

      


